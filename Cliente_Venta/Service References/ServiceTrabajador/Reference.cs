//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cliente_Venta.ServiceTrabajador {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceTrabajador.IService_Trabajador")]
    public interface IService_Trabajador {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Trabajador/Insertar", ReplyAction="http://tempuri.org/IService_Trabajador/InsertarResponse")]
        string Insertar(string nombre, string apellidos, string sexo, System.DateTime fecha_nacimiento, string num_documento, string direccion, string telefono, string email, string acceso, string usuario, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Trabajador/Insertar", ReplyAction="http://tempuri.org/IService_Trabajador/InsertarResponse")]
        System.Threading.Tasks.Task<string> InsertarAsync(string nombre, string apellidos, string sexo, System.DateTime fecha_nacimiento, string num_documento, string direccion, string telefono, string email, string acceso, string usuario, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Trabajador/Editar", ReplyAction="http://tempuri.org/IService_Trabajador/EditarResponse")]
        string Editar(int idtrabajador, string nombre, string apellidos, string sexo, System.DateTime fecha_nacimiento, string num_documento, string direccion, string telefono, string email, string acceso, string usuario, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Trabajador/Editar", ReplyAction="http://tempuri.org/IService_Trabajador/EditarResponse")]
        System.Threading.Tasks.Task<string> EditarAsync(int idtrabajador, string nombre, string apellidos, string sexo, System.DateTime fecha_nacimiento, string num_documento, string direccion, string telefono, string email, string acceso, string usuario, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Trabajador/Eliminar", ReplyAction="http://tempuri.org/IService_Trabajador/EliminarResponse")]
        string Eliminar(int idtrabajador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Trabajador/Eliminar", ReplyAction="http://tempuri.org/IService_Trabajador/EliminarResponse")]
        System.Threading.Tasks.Task<string> EliminarAsync(int idtrabajador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Trabajador/Mostrar", ReplyAction="http://tempuri.org/IService_Trabajador/MostrarResponse")]
        System.Data.DataTable Mostrar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Trabajador/Mostrar", ReplyAction="http://tempuri.org/IService_Trabajador/MostrarResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> MostrarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Trabajador/BuscarApellidos", ReplyAction="http://tempuri.org/IService_Trabajador/BuscarApellidosResponse")]
        System.Data.DataTable BuscarApellidos(string textobuscar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Trabajador/BuscarApellidos", ReplyAction="http://tempuri.org/IService_Trabajador/BuscarApellidosResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> BuscarApellidosAsync(string textobuscar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Trabajador/BuscarNum_Documento", ReplyAction="http://tempuri.org/IService_Trabajador/BuscarNum_DocumentoResponse")]
        System.Data.DataTable BuscarNum_Documento(string textobuscar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Trabajador/BuscarNum_Documento", ReplyAction="http://tempuri.org/IService_Trabajador/BuscarNum_DocumentoResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> BuscarNum_DocumentoAsync(string textobuscar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Trabajador/Login", ReplyAction="http://tempuri.org/IService_Trabajador/LoginResponse")]
        System.Data.DataTable Login(string usuario, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService_Trabajador/Login", ReplyAction="http://tempuri.org/IService_Trabajador/LoginResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> LoginAsync(string usuario, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService_TrabajadorChannel : Cliente_Venta.ServiceTrabajador.IService_Trabajador, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service_TrabajadorClient : System.ServiceModel.ClientBase<Cliente_Venta.ServiceTrabajador.IService_Trabajador>, Cliente_Venta.ServiceTrabajador.IService_Trabajador {
        
        public Service_TrabajadorClient() {
        }
        
        public Service_TrabajadorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service_TrabajadorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service_TrabajadorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service_TrabajadorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Insertar(string nombre, string apellidos, string sexo, System.DateTime fecha_nacimiento, string num_documento, string direccion, string telefono, string email, string acceso, string usuario, string password) {
            return base.Channel.Insertar(nombre, apellidos, sexo, fecha_nacimiento, num_documento, direccion, telefono, email, acceso, usuario, password);
        }
        
        public System.Threading.Tasks.Task<string> InsertarAsync(string nombre, string apellidos, string sexo, System.DateTime fecha_nacimiento, string num_documento, string direccion, string telefono, string email, string acceso, string usuario, string password) {
            return base.Channel.InsertarAsync(nombre, apellidos, sexo, fecha_nacimiento, num_documento, direccion, telefono, email, acceso, usuario, password);
        }
        
        public string Editar(int idtrabajador, string nombre, string apellidos, string sexo, System.DateTime fecha_nacimiento, string num_documento, string direccion, string telefono, string email, string acceso, string usuario, string password) {
            return base.Channel.Editar(idtrabajador, nombre, apellidos, sexo, fecha_nacimiento, num_documento, direccion, telefono, email, acceso, usuario, password);
        }
        
        public System.Threading.Tasks.Task<string> EditarAsync(int idtrabajador, string nombre, string apellidos, string sexo, System.DateTime fecha_nacimiento, string num_documento, string direccion, string telefono, string email, string acceso, string usuario, string password) {
            return base.Channel.EditarAsync(idtrabajador, nombre, apellidos, sexo, fecha_nacimiento, num_documento, direccion, telefono, email, acceso, usuario, password);
        }
        
        public string Eliminar(int idtrabajador) {
            return base.Channel.Eliminar(idtrabajador);
        }
        
        public System.Threading.Tasks.Task<string> EliminarAsync(int idtrabajador) {
            return base.Channel.EliminarAsync(idtrabajador);
        }
        
        public System.Data.DataTable Mostrar() {
            return base.Channel.Mostrar();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> MostrarAsync() {
            return base.Channel.MostrarAsync();
        }
        
        public System.Data.DataTable BuscarApellidos(string textobuscar) {
            return base.Channel.BuscarApellidos(textobuscar);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> BuscarApellidosAsync(string textobuscar) {
            return base.Channel.BuscarApellidosAsync(textobuscar);
        }
        
        public System.Data.DataTable BuscarNum_Documento(string textobuscar) {
            return base.Channel.BuscarNum_Documento(textobuscar);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> BuscarNum_DocumentoAsync(string textobuscar) {
            return base.Channel.BuscarNum_DocumentoAsync(textobuscar);
        }
        
        public System.Data.DataTable Login(string usuario, string password) {
            return base.Channel.Login(usuario, password);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> LoginAsync(string usuario, string password) {
            return base.Channel.LoginAsync(usuario, password);
        }
    }
}
